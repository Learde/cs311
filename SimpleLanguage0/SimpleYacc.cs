// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, QUT 2005-2010
// (see accompanying GPPGcopyright.rtf)

// GPPG version 1.3.6
// Machine:  LEARDEPC
// DateTime: 16.02.2024 22:22:09
// UserName: learde
// Input file <SimpleYacc.y>

// options: no-lines gplex

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Text;
using QUT.Gppg;

namespace SimpleParser
{
public enum Tokens {
    error=1,EOF=2,SET=3,SUB=4,RETURN=5,IF=6,
    ELSE=7,WHILE=8,END=9,ID=10,STRING=11,CHAR=12,
    PLUS=13,MINUS=14,NOT=15,ADDRESS=16,OR=17,AND=18,
    MOD=19,DIV=20,MULT=21,DIVISION=22,STREAM=23,IS=24,
    LT=25,GT=26,LEQ=27,GEQ=28,NEQ=29,INUM=30,
    ECHO=31,ASSIGN=32,RIGHT_BRACKET=33,LEFT_BRACKET=34,COMMA=35,LEFT_SQUARE_BRACKET=36,
    RIGHT_SQUARE_BRACKET=37,LINE_BREAK=38,NEW_LINE=39};

// Abstract base class for GPLEX scanners
public abstract class ScanBase : AbstractScanner<int,LexLocation> {
  private LexLocation __yylloc = new LexLocation();
  public override LexLocation yylloc { get { return __yylloc; } set { __yylloc = value; } }
  protected virtual bool yywrap() { return true; }
}

public class Parser: ShiftReduceParser<int, LexLocation>
{
  // Verbatim content from SimpleYacc.y
// Ёти объ€влени€ добавл€ютс€ в класс GPPGParser, представл€ющий собой парсер, генерируемый системой gppg
    public Parser(AbstractScanner<int, LexLocation> scanner) : base(scanner) { }
  // End verbatim content from SimpleYacc.y

#pragma warning disable 649
  private static Dictionary<int, string> aliasses;
#pragma warning restore 649
  private static Rule[] rules = new Rule[63];
  private static State[] states = new State[104];
  private static string[] nonTerms = new string[] {
      "program", "$accept", "operlist", "subprog", "suboperlist", "oper", "assignment", 
      "subroutine", "exprlist", "statement", "arr", "arrlist", "expr", "binop", 
      "call", "unop", "const", "func", "paramlist", "ifst", "whilest", "returnst", 
      };

  static Parser() {
    states[0] = new State(new int[]{3,7,4,63,10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51,6,76,8,92,5,101},new int[]{-1,1,-3,3,-6,103,-7,6,-8,62,-9,73,-13,36,-15,13,-16,37,-17,46,-18,50,-10,74,-20,75,-21,91,-22,100});
    states[1] = new State(new int[]{2,2});
    states[2] = new State(-1);
    states[3] = new State(new int[]{39,4,2,-2});
    states[4] = new State(new int[]{3,7,4,63,10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51,6,76,8,92,5,101,39,-4,2,-4},new int[]{-6,5,-7,6,-8,62,-9,73,-13,36,-15,13,-16,37,-17,46,-18,50,-10,74,-20,75,-21,91,-22,100});
    states[5] = new State(-5);
    states[6] = new State(-10);
    states[7] = new State(new int[]{10,8});
    states[8] = new State(new int[]{32,9});
    states[9] = new State(new int[]{10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51,34,55},new int[]{-9,10,-11,54,-13,36,-15,13,-16,37,-17,46,-18,50});
    states[10] = new State(new int[]{13,20,14,21,17,22,18,23,19,24,20,25,21,26,22,27,23,28,24,29,25,30,26,31,27,32,28,33,29,34,16,35,39,-14,2,-14,38,-14},new int[]{-14,11});
    states[11] = new State(new int[]{10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51},new int[]{-13,12,-15,13,-16,37,-17,46,-18,50});
    states[12] = new State(-21);
    states[13] = new State(-38);
    states[14] = new State(new int[]{34,15,13,-44,14,-44,17,-44,18,-44,19,-44,20,-44,21,-44,22,-44,23,-44,24,-44,25,-44,26,-44,27,-44,28,-44,29,-44,16,-44,39,-44,2,-44,38,-44,33,-44,35,-44,37,-44});
    states[15] = new State(new int[]{33,52,10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51},new int[]{-19,16,-9,53,-13,36,-15,13,-16,37,-17,46,-18,50});
    states[16] = new State(new int[]{33,17,35,18});
    states[17] = new State(-42);
    states[18] = new State(new int[]{10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51},new int[]{-9,19,-13,36,-15,13,-16,37,-17,46,-18,50});
    states[19] = new State(new int[]{13,20,14,21,17,22,18,23,19,24,20,25,21,26,22,27,23,28,24,29,25,30,26,31,27,32,28,33,29,34,16,35,33,-46,35,-46},new int[]{-14,11});
    states[20] = new State(-22);
    states[21] = new State(-23);
    states[22] = new State(-24);
    states[23] = new State(-25);
    states[24] = new State(-26);
    states[25] = new State(-27);
    states[26] = new State(-28);
    states[27] = new State(-29);
    states[28] = new State(-30);
    states[29] = new State(-31);
    states[30] = new State(-32);
    states[31] = new State(-33);
    states[32] = new State(-34);
    states[33] = new State(-35);
    states[34] = new State(-36);
    states[35] = new State(-37);
    states[36] = new State(-20);
    states[37] = new State(-39);
    states[38] = new State(new int[]{10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51},new int[]{-9,39,-13,36,-15,13,-16,37,-17,46,-18,50});
    states[39] = new State(new int[]{13,20,14,21,17,22,18,23,19,24,20,25,21,26,22,27,23,28,24,29,25,30,26,31,27,32,28,33,29,34,16,35,39,-47,2,-47,38,-47,33,-47,35,-47,37,-47},new int[]{-14,11});
    states[40] = new State(new int[]{10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51},new int[]{-9,41,-13,36,-15,13,-16,37,-17,46,-18,50});
    states[41] = new State(new int[]{13,20,14,21,17,22,18,23,19,24,20,25,21,26,22,27,23,28,24,29,25,30,26,31,27,32,28,33,29,34,16,35,39,-48,2,-48,38,-48,33,-48,35,-48,37,-48},new int[]{-14,11});
    states[42] = new State(new int[]{10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51},new int[]{-9,43,-13,36,-15,13,-16,37,-17,46,-18,50});
    states[43] = new State(new int[]{13,20,14,21,17,22,18,23,19,24,20,25,21,26,22,27,23,28,24,29,25,30,26,31,27,32,28,33,29,34,16,35,39,-49,2,-49,38,-49,33,-49,35,-49,37,-49},new int[]{-14,11});
    states[44] = new State(new int[]{10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51},new int[]{-9,45,-13,36,-15,13,-16,37,-17,46,-18,50});
    states[45] = new State(new int[]{13,20,14,21,17,22,18,23,19,24,20,25,21,26,22,27,23,28,24,29,25,30,26,31,27,32,28,33,29,34,16,35,39,-50,2,-50,38,-50,33,-50,35,-50,37,-50},new int[]{-14,11});
    states[46] = new State(-40);
    states[47] = new State(-51);
    states[48] = new State(-52);
    states[49] = new State(-53);
    states[50] = new State(-41);
    states[51] = new State(-54);
    states[52] = new State(-43);
    states[53] = new State(new int[]{13,20,14,21,17,22,18,23,19,24,20,25,21,26,22,27,23,28,24,29,25,30,26,31,27,32,28,33,29,34,16,35,33,-45,35,-45},new int[]{-14,11});
    states[54] = new State(-15);
    states[55] = new State(new int[]{33,56,10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51},new int[]{-12,57,-13,61,-15,13,-16,37,-17,46,-18,50});
    states[56] = new State(-16);
    states[57] = new State(new int[]{33,58,35,59});
    states[58] = new State(-17);
    states[59] = new State(new int[]{10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51},new int[]{-13,60,-15,13,-16,37,-17,46,-18,50});
    states[60] = new State(-19);
    states[61] = new State(-18);
    states[62] = new State(-11);
    states[63] = new State(new int[]{10,64});
    states[64] = new State(new int[]{38,65});
    states[65] = new State(new int[]{3,7,4,63,10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51,6,76,8,92,5,101},new int[]{-4,66,-5,69,-6,89,-7,6,-8,62,-9,73,-13,36,-15,13,-16,37,-17,46,-18,50,-10,74,-20,75,-21,91,-22,100});
    states[66] = new State(new int[]{9,67});
    states[67] = new State(new int[]{4,68});
    states[68] = new State(-55);
    states[69] = new State(new int[]{39,72,3,7,4,63,10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51,6,76,8,92,5,101,9,-3,7,-3},new int[]{-6,70,-7,6,-8,62,-9,73,-13,36,-15,13,-16,37,-17,46,-18,50,-10,74,-20,75,-21,91,-22,100});
    states[70] = new State(new int[]{38,71});
    states[71] = new State(-7);
    states[72] = new State(-8);
    states[73] = new State(new int[]{13,20,14,21,17,22,18,23,19,24,20,25,21,26,22,27,23,28,24,29,25,30,26,31,27,32,28,33,29,34,16,35,39,-12,2,-12,38,-12},new int[]{-14,11});
    states[74] = new State(-13);
    states[75] = new State(-56);
    states[76] = new State(new int[]{36,77});
    states[77] = new State(new int[]{10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51},new int[]{-9,78,-13,36,-15,13,-16,37,-17,46,-18,50});
    states[78] = new State(new int[]{37,79,13,20,14,21,17,22,18,23,19,24,20,25,21,26,22,27,23,28,24,29,25,30,26,31,27,32,28,33,29,34,16,35},new int[]{-14,11});
    states[79] = new State(new int[]{38,80});
    states[80] = new State(new int[]{3,7,4,63,10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51,6,76,8,92,5,101},new int[]{-4,81,-5,69,-6,89,-7,6,-8,62,-9,73,-13,36,-15,13,-16,37,-17,46,-18,50,-10,74,-20,75,-21,91,-22,100});
    states[81] = new State(new int[]{9,82,7,84});
    states[82] = new State(new int[]{6,83});
    states[83] = new State(-59);
    states[84] = new State(new int[]{38,85});
    states[85] = new State(new int[]{3,7,4,63,10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51,6,76,8,92,5,101},new int[]{-4,86,-5,69,-6,89,-7,6,-8,62,-9,73,-13,36,-15,13,-16,37,-17,46,-18,50,-10,74,-20,75,-21,91,-22,100});
    states[86] = new State(new int[]{9,87});
    states[87] = new State(new int[]{6,88});
    states[88] = new State(-60);
    states[89] = new State(new int[]{38,90});
    states[90] = new State(-9);
    states[91] = new State(-57);
    states[92] = new State(new int[]{36,93});
    states[93] = new State(new int[]{10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51},new int[]{-9,94,-13,36,-15,13,-16,37,-17,46,-18,50});
    states[94] = new State(new int[]{37,95,13,20,14,21,17,22,18,23,19,24,20,25,21,26,22,27,23,28,24,29,25,30,26,31,27,32,28,33,29,34,16,35},new int[]{-14,11});
    states[95] = new State(new int[]{38,96});
    states[96] = new State(new int[]{3,7,4,63,10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51,6,76,8,92,5,101},new int[]{-4,97,-5,69,-6,89,-7,6,-8,62,-9,73,-13,36,-15,13,-16,37,-17,46,-18,50,-10,74,-20,75,-21,91,-22,100});
    states[97] = new State(new int[]{9,98});
    states[98] = new State(new int[]{8,99});
    states[99] = new State(-61);
    states[100] = new State(-58);
    states[101] = new State(new int[]{10,14,13,38,14,40,16,42,15,44,11,47,12,48,30,49,31,51},new int[]{-9,102,-13,36,-15,13,-16,37,-17,46,-18,50});
    states[102] = new State(new int[]{13,20,14,21,17,22,18,23,19,24,20,25,21,26,22,27,23,28,24,29,25,30,26,31,27,32,28,33,29,34,16,35,39,-62,2,-62,38,-62},new int[]{-14,11});
    states[103] = new State(-6);

    rules[1] = new Rule(-2, new int[]{-1,2});
    rules[2] = new Rule(-1, new int[]{-3});
    rules[3] = new Rule(-4, new int[]{-5});
    rules[4] = new Rule(-3, new int[]{-3,39});
    rules[5] = new Rule(-3, new int[]{-3,39,-6});
    rules[6] = new Rule(-3, new int[]{-6});
    rules[7] = new Rule(-5, new int[]{-5,-6,38});
    rules[8] = new Rule(-5, new int[]{-5,39});
    rules[9] = new Rule(-5, new int[]{-6,38});
    rules[10] = new Rule(-6, new int[]{-7});
    rules[11] = new Rule(-6, new int[]{-8});
    rules[12] = new Rule(-6, new int[]{-9});
    rules[13] = new Rule(-6, new int[]{-10});
    rules[14] = new Rule(-7, new int[]{3,10,32,-9});
    rules[15] = new Rule(-7, new int[]{3,10,32,-11});
    rules[16] = new Rule(-11, new int[]{34,33});
    rules[17] = new Rule(-11, new int[]{34,-12,33});
    rules[18] = new Rule(-12, new int[]{-13});
    rules[19] = new Rule(-12, new int[]{-12,35,-13});
    rules[20] = new Rule(-9, new int[]{-13});
    rules[21] = new Rule(-9, new int[]{-9,-14,-13});
    rules[22] = new Rule(-14, new int[]{13});
    rules[23] = new Rule(-14, new int[]{14});
    rules[24] = new Rule(-14, new int[]{17});
    rules[25] = new Rule(-14, new int[]{18});
    rules[26] = new Rule(-14, new int[]{19});
    rules[27] = new Rule(-14, new int[]{20});
    rules[28] = new Rule(-14, new int[]{21});
    rules[29] = new Rule(-14, new int[]{22});
    rules[30] = new Rule(-14, new int[]{23});
    rules[31] = new Rule(-14, new int[]{24});
    rules[32] = new Rule(-14, new int[]{25});
    rules[33] = new Rule(-14, new int[]{26});
    rules[34] = new Rule(-14, new int[]{27});
    rules[35] = new Rule(-14, new int[]{28});
    rules[36] = new Rule(-14, new int[]{29});
    rules[37] = new Rule(-14, new int[]{16});
    rules[38] = new Rule(-13, new int[]{-15});
    rules[39] = new Rule(-13, new int[]{-16});
    rules[40] = new Rule(-13, new int[]{-17});
    rules[41] = new Rule(-13, new int[]{-18});
    rules[42] = new Rule(-15, new int[]{10,34,-19,33});
    rules[43] = new Rule(-15, new int[]{10,34,33});
    rules[44] = new Rule(-15, new int[]{10});
    rules[45] = new Rule(-19, new int[]{-9});
    rules[46] = new Rule(-19, new int[]{-19,35,-9});
    rules[47] = new Rule(-16, new int[]{13,-9});
    rules[48] = new Rule(-16, new int[]{14,-9});
    rules[49] = new Rule(-16, new int[]{16,-9});
    rules[50] = new Rule(-16, new int[]{15,-9});
    rules[51] = new Rule(-17, new int[]{11});
    rules[52] = new Rule(-17, new int[]{12});
    rules[53] = new Rule(-17, new int[]{30});
    rules[54] = new Rule(-18, new int[]{31});
    rules[55] = new Rule(-8, new int[]{4,10,38,-4,9,4});
    rules[56] = new Rule(-10, new int[]{-20});
    rules[57] = new Rule(-10, new int[]{-21});
    rules[58] = new Rule(-10, new int[]{-22});
    rules[59] = new Rule(-20, new int[]{6,36,-9,37,38,-4,9,6});
    rules[60] = new Rule(-20, new int[]{6,36,-9,37,38,-4,7,38,-4,9,6});
    rules[61] = new Rule(-21, new int[]{8,36,-9,37,38,-4,9,8});
    rules[62] = new Rule(-22, new int[]{5,-9});
  }

  protected override void Initialize() {
    this.InitSpecialTokens((int)Tokens.error, (int)Tokens.EOF);
    this.InitStates(states);
    this.InitRules(rules);
    this.InitNonTerminals(nonTerms);
  }

  protected override void DoAction(int action)
  {
    switch (action)
    {
    }
  }

  protected override string TerminalToString(int terminal)
  {
    if (aliasses != null && aliasses.ContainsKey(terminal))
        return aliasses[terminal];
    else if (((Tokens)terminal).ToString() != terminal.ToString(CultureInfo.InvariantCulture))
        return ((Tokens)terminal).ToString();
    else
        return CharToString((char)terminal);
  }

}
}
